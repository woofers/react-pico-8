{"version":3,"sources":["code-block.js","code.js","checkbox.js","drag-list.js","button.js","mount-button.js","app.js","index.js"],"names":["code","css","_templateObject","CodeBlock","p","lang","language","toLowerCase","Object","core_browser_esm","lib_default","a","component","className","concat","children","spaces","indent","repeat","autoPlay","legacyButtons","hideCursor","center","blockKeys","usePointer","unpauseOnReset","buttons","enabled","filter","_ref3","defaultImports","length","names","map","_ref2","name","join","imports","items","_ref","tags","withStyles","root","color","grey","padding","disabled","react_default","createElement","Checkbox_Checkbox","assign","drag_list_templateObject","check","_templateObject2","iconSize","_templateObject3","background","_templateObject4","align","_templateObject5","DragList","react_beautiful_dnd_esm","onDragEnd","result","destination","setItems","list","startIndex","endIndex","Array","from","_result$splice","splice","removed","slicedToArray","reorder","source","index","droppableId","provided","snapshot","ref","innerRef","pair","Button","id","label","dragable","_templateObject6","icon","selected","key","isDragDisabled","draggableId","draggableProps","dragHandleProps","style","isDragging","draggableStyle","objectSpread","listStyle","src_checkbox","checked","onChange","_items$splice","toggle","aria-hidden","htmlFor","placeholder","normal","useStyles","makeStyles","theme","button","margin","spacing","width","borderColor","&:hover","backgroundColor","input","display","src_button","classes","Button_Button","variant","onClick","mount_button","mounted","Checkbox","span","app_templateObject","Option","app_templateObject2","app_Checkbox","App","font","app_templateObject3","desc","app_templateObject4","page","app_templateObject5","form","app_templateObject6","link","_templateObject7","heading","_templateObject8","live","_templateObject9","_templateObject10","usage","_templateObject11","_useState","useState","_useState2","setAutoPlay","_useState3","_useState4","setLegacyButtons","_useState5","_useState6","setHideCursor","_useState7","_useState8","setCenter","_useState9","_useState10","setBlockKeys","_useState11","_useState12","isMounted","setMounted","_useState13","_useState14","setPointer","_useState15","_useState16","setUnpauseOnReset","_useState17","picoButtons","_useState18","setButtons","props","react_chameleon_theme_color_min","styles","react_pico_8_default","src","href","height","alt","app_Option","drag_list","code_block","codeDemo","apply","toConsumableArray","values","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.50eee4a7.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport PrismCode from 'react-prism'\nimport 'prismjs'\nimport 'prismjs/components/prism-jsx.min'\nimport 'prism-themes/themes/prism-dracula.css'\n\nconst code = css`\n  width: 600px;\n  pre {\n    padding: 0;\n    padding-bottom: 25px;\n    background: #191919;\n    span[class*=\"class-name\"] {\n      color: #ff79c6;\n    }\n  }\n  span, code, pre {\n    font-family: 'Inconsolata', monospace;\n  }\n  span[class*=\"boolean\"],\n  span[class*=\"string\"],\n  span[class*=\"attr-value\"] {\n    font-weight: 700;\n  }\n`\n\nconst CodeBlock = p => {\n  let lang = p.language || ''\n  lang = lang.toLowerCase()\n  return (\n    <div css={code}>\n      <PrismCode component=\"pre\" className={`language-${lang}`}>\n        {p.children}\n      </PrismCode>\n    </div>\n  )\n}\n\nexport default CodeBlock\n","const spaces = indent => {\n  const tab = 2\n  return ' '.repeat(tab * indent)\n}\n\nconst tags = buttons => {\n  if (buttons.length === 0) return '/>'\n  const items = buttons.map(({ name }) => `${spaces(3)}<${name}/>`).join('\\n')\n  return `>\n${items}\n    </Pico8>`\n}\n\nconst imports = buttons => {\n  const defaultImports = `\n  import React from 'react'\n  import Pico8 from 'react-pico-8'`\n\n  if (buttons.length === 0) return defaultImports\n  const names = buttons.map(({ name }) => name).join(`,\\n${spaces(5)} `)\n  return `${defaultImports}\n  import { ${names} } from 'react-pico-8/buttons'`\n}\n\nconst code = (\n  autoPlay, legacyButtons, hideCursor,\n  center, blockKeys, usePointer, unpauseOnReset, buttons\n) => {\n  const enabled = buttons.filter(({ enabled }) => enabled)\n  return `${imports(enabled)}\n\n  const App = () => (\n    <Pico8 src=\"index.js\"\n           autoPlay={${autoPlay}}\n           legacyButtons={${legacyButtons}}\n           hideCursor={${hideCursor}}\n           center={${center}}\n           blockKeys={${blockKeys}}\n           usePointer={${usePointer}}\n           unpauseOnReset={${unpauseOnReset}}\n           placeholder=\"placeholder.png\"\n    ${tags(enabled)}\n  )`\n}\n\nexport default code\n","\nimport React from 'react'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { withStyles } from '@material-ui/core/styles'\nimport { grey } from '@material-ui/core/colors'\n\nexport default withStyles({\n  root: {\n    color: grey[100],\n    padding: '6px',\n  },\n  disabled: {\n    color: '#3c3a3a !important'\n  },\n})(p => <Checkbox color=\"default\" {...p} />)\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport Box from './checkbox'\n\n// Adapted from https://codesandbox.io/s/4qp6vjp319?from-embed\n\nconst indent = css`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nconst check = css`\n  margin-left: 24px;\n  margin-right: 8px;\n`\n\nconst iconSize = css`\n  display: inline-flex;\n  min-width: 56px;\n  flex-shrink: 0;\n`\n\nconst background = css`\n  color: #fff;\n  max-width: 350px;\n`\n\nconst align = css`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding-top: 8px;\n  padding-bottom: 8px;\n`\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n  return result\n}\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  listStyle: 'none',\n  ...draggableStyle,\n  ...(isDragging && {\n    background: \"#313131\"\n  })\n})\n\nconst DragList = p => {\n  const onDragEnd = (result) => {\n    if (!result.destination) return\n    p.setItems(items => {\n      return reorder(\n        items,\n        result.source.index,\n        result.destination.index\n      )\n    })\n  }\n  const toggle = index => {\n    p.setItems(items => {\n      let [removed] = items.splice(index, 1)\n      removed.enabled = !removed.enabled\n      items.splice(index, 0, removed)\n      return items.concat([])\n    })\n  }\n  return (\n    <form css={background}>\n      <fieldset>\n        <legend>{p.children}</legend>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div ref={provided.innerRef}>\n                <ul css={indent}>\n                  {p.items.map((pair, index) => {\n                    const { name, Button } = pair\n                    const id = `icon-${name}`\n                    const label = name.toLowerCase()\n                    const dragable = css`\n                      div {\n                        cursor: ${p.disabled ? 'auto' : 'grab'} !important;\n                      }\n                    `\n                    const icon = <span css={dragable}><Button selected={pair.enabled} disabled={true} /></span>\n                    return (\n                      <Draggable key={id} isDragDisabled={p.disabled} draggableId={id} index={index}>\n                        {(provided, snapshot) => (\n                          <li\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            )}\n                          >\n                            <div css={align}>\n                              <Box id={label} disabled={p.disabled} css={check} checked={pair.enabled} onChange={() => toggle(index)} />\n                              <div css={iconSize} aria-hidden=\"true\">{icon}</div>\n                              <label htmlFor={label}>{name}</label>\n                            </div>\n                          </li>\n                        )}\n                      </Draggable>\n                    )})}\n                    {provided.placeholder}\n                </ul>\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </fieldset>\n    </form>\n  )\n}\n\nexport default DragList\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport { grey } from '@material-ui/core/colors'\n\nconst normal = grey[100]\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n    width: '145px',\n    color: normal,\n    borderColor: normal,\n    '&:hover': {\n      borderColor: grey[200],\n      backgroundColor: 'rgba(140, 146, 181, 0.08)',\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}))\n\nexport default p => {\n  const classes = useStyles()\n  return <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={p.onClick}>{p.children}</Button>\n}\n","import React from 'react'\nimport Button from './button'\n\nexport default p => {\n  const onClick = () => {\n    if (p.onClick) p.onClick()\n  }\n  return (\n    <Button onClick={onClick}>{p.mounted ? 'Unmount' : 'Mount'}</Button>\n  )\n}\n","/** @jsx jsx */\nimport { Global, jsx, css } from '@emotion/core'\nimport { useState } from 'react'\nimport Pico8 from 'react-pico-8'\nimport * as picoButtons from 'react-pico-8/buttons'\nimport CodeBlock from './code-block'\nimport codeDemo from './code'\nimport List from './drag-list'\nimport Box from './checkbox'\nimport Button from './mount-button'\nimport { ChameleonThemeColor } from 'react-chameleon-theme-color'\n\nconst Checkbox = p => {\n  const span = css`\n    padding: 3px;\n  `\n  return (\n    <div css={span}>\n      <Box id={p.name} disabled={p.disabled} checked={p.checked} onChange={p.onChange} />\n      <label htmlFor={p.name}>{p.children}</label>\n    </div>\n  )\n}\n\nconst Option = p => {\n  const style = css`\n    color: #fff;\n    margin-left: 5px;\n  `\n  return (\n    <Checkbox name={p.name} disabled={p.disabled} checked={p.checked} onChange={p.onChange}>\n      <strong>{p.name}</strong>\n      <span css={style}>- {p.children}</span>\n    </Checkbox>\n  )\n}\n\nconst App = () => {\n  const font = css`\n    @import url('https://fonts.googleapis.com/css?family=Inconsolata:400,700|Lato:400,700');\n    * {\n      font-family: 'Lato', sans-serif;\n    }\n    body {\n      background: #222;\n      margin: 0;\n    }\n  `\n  const desc = css`\n    margin: 0 auto;\n    padding: 35px;\n    color: #FFF;\n    max-width: 1000px;\n    fieldset {\n      border: none;\n    }\n    legend {\n      display: block;\n      font-size: 1.5em;\n      font-weight: bold;\n      margin: 0 0 5px 0;\n    }\n    h2 {\n      margin-top: 0;\n    }\n  `\n  const page = css`\n    margin-top: 75px;\n  `\n  const form = css`\n    margin-top: 20px;\n  `\n  const link = css`\n    a {\n      text-decoration: none;\n      color: #FFF;\n    }\n    a:hover {\n      opacity: 0.5;\n    }\n  `\n  const heading = css`\n    margin-bottom: 20px;\n    a {\n      margin-right: 10px;\n    }\n    h1 {\n      display: inline;\n    }\n    img {\n      image-rendering: pixelated;\n    }\n  `\n  const live = css`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  `\n  const list = css`\n    flex: 0 400px;\n  `\n\n  const usage = css`\n    flex: 0 600px;\n  `\n  const order = [\n    'Controls',\n    'Reset',\n    'Pause',\n    'Sound',\n    'Carts',\n    'Fullscreen'\n  ]\n  const [autoPlay, setAutoPlay] = useState(true)\n  const [legacyButtons, setLegacyButtons] = useState(false)\n  const [hideCursor, setHideCursor] = useState(false)\n  const [center, setCenter] = useState(true)\n  const [blockKeys, setBlockKeys] = useState(false)\n  const [isMounted, setMounted] = useState(true)\n  const [usePointer, setPointer] = useState(true)\n  const [unpauseOnReset, setUnpauseOnReset] = useState(true)\n  const [buttons, setButtons] = useState(order.map(name => ({\n    name,\n    Button: picoButtons[name],\n    enabled: name !== 'Reset' && name !== 'Carts'\n  })))\n  const props = {\n    autoPlay,\n    legacyButtons,\n    hideCursor,\n    center,\n    blockKeys,\n    usePointer,\n    unpauseOnReset\n  }\n  return (\n    <div>\n      <ChameleonThemeColor />\n      <div css={page}>\n        <Global styles={font} />\n        { isMounted ?\n          <Pico8 src=\"index.js\" placeholder=\"placeholder.png\" {...props}>\n            {buttons.filter(({enabled}) => enabled).map(({ name, Button }) => <Button key={name}/>)}\n          </Pico8> : null }\n        <div css={desc}>\n          <span css={[heading, link]}>\n            <h1>\n              <a href=\"https://github.com/woofers/react-pico-8\">react-pico-8</a>\n            </h1>\n            <img width=\"32px\" height=\"32px\" src=\"pico.png\" alt=\"PICO-8 Logo\" />\n          </span>\n          <form css={form}>\n            <fieldset>\n              <legend>Props</legend>\n              <Option name=\"autoPlay\" checked={autoPlay} onChange={() => setAutoPlay(!autoPlay)}>\n                Indicates if the game canvas should attempt to auto-play on page-load.\n              </Option>\n              <Option name=\"legacyButtons\" disabled={!isMounted} checked={legacyButtons} onChange={() => setLegacyButtons(!legacyButtons)}>\n                Used to select the type of buttons.\n              </Option>\n              <Option name=\"hideCursor\" disabled={!isMounted} checked={hideCursor} onChange={() => setHideCursor(!hideCursor)}>\n                Indicates if the cursor is hidden over the game canvas when the game is playing.\n              </Option>\n              <Option name=\"center\" disabled={!isMounted} checked={center} onChange={() => setCenter(!center)}>\n                Indicates if the game is centred outside of fullscreen mode.\n              </Option>\n              <Option name=\"blockKeys\" disabled={!isMounted} checked={blockKeys} onChange={() => setBlockKeys(!blockKeys)}>\n                If set keys which are used to interact with the game are blocked from scrolling when the game is running.  If un-set keys will only be blocked when the canvas is focused.\n              </Option>\n              <Option name=\"usePointer\" disabled={!isMounted} checked={usePointer} onChange={() => setPointer(!usePointer)}>\n                If set the pointer hand will be used on buttons.  If un-set a normal cursor will be used on all buttons which do not lead to a new page.\n              </Option>\n              <Option name=\"unpauseOnReset\" disabled={!isMounted} checked={unpauseOnReset} onChange={() => setUnpauseOnReset(!unpauseOnReset)}>\n                If set hitting the reset button when paused will instantly reset the game.  Otherwise the game will need to be resumed before it resets.\n              </Option>\n            </fieldset>\n            <fieldset>\n              <legend>State</legend>\n              <Button mounted={isMounted} onClick={() => setMounted(!isMounted)}/>\n            </fieldset>\n          </form>\n          <div css={live}>\n            <div css={list}>\n              <List disabled={!isMounted} items={buttons} setItems={setButtons}>Buttons</List>\n            </div>\n            <div css={usage}>\n              <h2>Usage</h2>\n              <CodeBlock language=\"jsx\">{codeDemo(...Object.values(props), buttons)}</CodeBlock>\n              <p>Simply add the game widget to the React application using JSX.</p>\n              <p css={link}>\n                Be sure to include the <code>.js</code> <code>src</code> of\n                the game cartridge generated from <a href=\"https://lexaloffle.com/pico-8.php\">PICO-8</a>'s web export.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}