{"version":3,"sources":["code-block.js","code.js","drag-list.js","app.js","index.js"],"names":["code","css","_templateObject","CodeBlock","p","lang","language","toLowerCase","Object","core_browser_esm","lib_default","a","component","className","concat","children","spaces","indent","repeat","autoPlay","legacyButtons","hideCursor","center","blockKeys","usePointer","buttons","enabled","filter","_ref3","defaultImports","length","names","map","_ref2","name","join","imports","items","_ref","tags","drag_list_templateObject","check","_templateObject2","iconSize","_templateObject3","background","_templateObject4","align","_templateObject5","hidden","_templateObject6","DragList","react_beautiful_dnd_esm","onDragEnd","result","destination","setItems","list","startIndex","endIndex","Array","from","_result$splice","splice","removed","slicedToArray","reorder","source","index","droppableId","provided","snapshot","ref","innerRef","pair","Button","id","label","icon","selected","disabled","key","draggableId","assign","draggableProps","dragHandleProps","style","isDragging","draggableStyle","objectSpread","listStyle","type","checked","onChange","_items$splice","toggle","htmlFor","placeholder","Checkbox","span","app_templateObject","app_templateObject2","Option","app_templateObject3","app_Checkbox","App","font","app_templateObject4","desc","app_templateObject5","page","app_templateObject6","form","_templateObject7","link","_templateObject8","heading","_templateObject9","live","_templateObject10","_templateObject11","usage","_templateObject12","_useState","useState","_useState2","setAutoPlay","_useState3","_useState4","setLegacyButtons","_useState5","_useState6","setHideCursor","_useState7","_useState8","setCenter","_useState9","_useState10","setBlockKeys","_useState11","_useState12","isMounted","setMounted","_useState13","_useState14","setPointer","_useState15","picoButtons","_useState16","setButtons","values","styles","react_pico_8_default","src","href","width","height","alt","app_Option","drag_list","code_block","codeDemo","apply","ReactDOM","render","react_default","createElement","app","document","getElementById"],"mappings":"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","file":"static/js/main.9b6d2e22.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport PrismCode from 'react-prism'\nimport 'prismjs'\nimport 'prismjs/components/prism-jsx.min'\nimport 'prism-themes/themes/prism-dracula.css'\n\nconst code = css`\n  width: 600px;\n  pre {\n    padding: 0;\n    padding-bottom: 25px;\n    background: #191919;\n    span[class*=\"class-name\"] {\n      color: #ff79c6;\n    }\n  }\n  span, code, pre {\n    font-family: 'Inconsolata', monospace;\n  }\n  span[class*=\"boolean\"],\n  span[class*=\"string\"],\n  span[class*=\"attr-value\"] {\n    font-weight: 700;\n  }\n`\n\nconst CodeBlock = p => {\n  let lang = p.language || ''\n  lang = lang.toLowerCase()\n  return (\n    <div css={code}>\n      <PrismCode component=\"pre\" className={`language-${lang}`}>\n        {p.children}\n      </PrismCode>\n    </div>\n  )\n}\n\nexport default CodeBlock\n","const spaces = indent => {\n  const tab = 2\n  return ' '.repeat(tab * indent)\n}\n\nconst tags = buttons => {\n  if (buttons.length === 0) return '/>'\n  const items = buttons.map(({ name }) => `${spaces(3)}<${name}/>`).join('\\n')\n  return `>\n${items}\n    </Pico8>`\n}\n\nconst imports = buttons => {\n  const defaultImports = `\n  import React from 'react'\n  import Pico8 from 'react-pico-8'`\n\n  if (buttons.length === 0) return defaultImports\n  const names = buttons.map(({ name }) => name).join(`,\\n${spaces(5)} `)\n  return `${defaultImports}\n  import { ${names} } from 'react-pico-8/buttons'`\n}\n\nconst code = (\n  autoPlay, legacyButtons, hideCursor,\n  center, blockKeys, usePointer, buttons\n) => {\n  const enabled = buttons.filter(({ enabled }) => enabled)\n  return `${imports(enabled)}\n\n  const App = () => (\n    <Pico8 src=\"index.js\"\n           autoPlay={${autoPlay}}\n           legacyButtons={${legacyButtons}}\n           hideCursor={${hideCursor}}\n           center={${center}}\n           blockKeys={${blockKeys}}\n           usePointer={${usePointer}}\n           placeholder=\"placeholder.png\"\n    ${tags(enabled)}\n  )`\n}\n\nexport default code\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\n\n// Adapted from https://codesandbox.io/s/4qp6vjp319?from-embed\n\nconst indent = css`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nconst check = css`\n  margin-left: 24px;\n  margin-right: 8px;\n`\n\nconst iconSize = css`\n  display: inline-flex;\n  min-width: 56px;\n  flex-shrink: 0;\n`\n\nconst background = css`\n  color: #fff;\n  max-width: 350px;\n`\n\nconst align = css`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding-top: 8px;\n  padding-bottom: 8px;\n`\n\nconst hidden = css`\n  position: absolute;\n  left: -10000px;\n  top: auto;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n`\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n  return result\n}\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  listStyle: 'none',\n  ...draggableStyle,\n  ...(isDragging && {\n    background: \"#313131\"\n  })\n})\n\nconst DragList = p => {\n  const onDragEnd = (result) => {\n    if (!result.destination) return\n    p.setItems(items => {\n      return reorder(\n        items,\n        result.source.index,\n        result.destination.index\n      )\n    })\n  }\n  const toggle = index => {\n    p.setItems(items => {\n      let [removed] = items.splice(index, 1)\n      removed.enabled = !removed.enabled\n      items.splice(index, 0, removed)\n      return items.concat([])\n    })\n  }\n  return (\n    <form css={background}>\n      <fieldset>\n        <legend>{p.children}</legend>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div ref={provided.innerRef}>\n                <ul css={indent}>\n                  {p.items.map((pair, index) => {\n                    const { name, Button } = pair\n                    const id = `icon-${name}`\n                    const label = name.toLowerCase()\n                    const icon = <Button selected={pair.enabled} disabled={true} />\n                    return (\n                      <Draggable key={id} draggableId={id} index={index}>\n                        {(provided, snapshot) => (\n                          <li\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            )}\n                          >\n                            <div css={align}>\n                              <input id={label} css={check} type=\"checkbox\" checked={pair.enabled} onChange={() => toggle(index)} />\n                              <label css={hidden} htmlFor={label}>Show {name.toLowerCase()} button</label>\n                              <div css={iconSize}>{icon}</div>\n                              <div>{name}</div>\n                            </div>\n                          </li>\n                        )}\n                      </Draggable>\n                    )})}\n                    {provided.placeholder}\n                </ul>\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </fieldset>\n    </form>\n  )\n}\n\nexport default DragList\n","/** @jsx jsx */\nimport { Global, jsx, css } from '@emotion/core'\nimport { useState } from 'react'\nimport Pico8 from 'react-pico-8'\nimport * as picoButtons from 'react-pico-8/buttons'\nimport CodeBlock from './code-block'\nimport codeDemo from './code'\nimport List from './drag-list'\n\nconst Checkbox = p => {\n  const span = css`\n    padding: 10px;\n  `\n  const style = css`\n    margin-left: 5px;\n  `\n  return (\n    <div css={span}>\n      <input id={p.name} type=\"checkbox\" checked={p.checked} onChange={p.onChange} />\n      <label css={style} htmlFor={p.name}>{p.children}</label>\n    </div>\n  )\n}\n\nconst Option = p => {\n  const style = css`\n    color: #fff;\n    margin-left: 5px;\n  `\n  return (\n    <Checkbox name={p.name} checked={p.checked} onChange={p.onChange}>\n      <strong>{p.name}</strong>\n      <span css={style}>- {p.children}</span>\n    </Checkbox>\n  )\n}\n\nconst App = () => {\n  const font = css`\n    @import url('https://fonts.googleapis.com/css?family=Inconsolata:400,700|Lato:400,700');\n    * {\n      font-family: 'Lato', sans-serif;\n    }\n    body {\n      background: #222;\n      margin: 0;\n    }\n  `\n  const desc = css`\n    margin: 0 auto;\n    padding: 35px;\n    color: #FFF;\n    max-width: 1000px;\n\n    fieldset {\n      border: none;\n    }\n    legend {\n      display: block;\n      font-size: 1.5em;\n      font-weight: bold;\n      margin: 0 0 5px 0;\n    }\n    h2 {\n      margin-top: 0;\n    }\n  `\n  const page = css`\n    margin-top: 75px;\n  `\n  const form = css`\n    margin-top: 20px;\n  `\n  const link = css`\n    a {\n      text-decoration: none;\n      color: #FFF;\n    }\n    a:hover {\n      opacity: 0.5;\n    }\n  `\n  const heading = css`\n    margin-bottom: 20px;\n    a {\n      margin-right: 10px;\n    }\n    h1 {\n      display: inline;\n    }\n    img {\n      image-rendering: pixelated;\n    }\n  `\n  const live = css`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  `\n  const list = css`\n    flex: 0 400px;\n  `\n\n  const usage = css`\n    flex: 0 600px;\n  `\n  const order = [\n    'Controls',\n    'Reset',\n    'Pause',\n    'Sound',\n    'Carts',\n    'Fullscreen'\n  ]\n  const [autoPlay, setAutoPlay] = useState(true)\n  const [legacyButtons, setLegacyButtons] = useState(false)\n  const [hideCursor, setHideCursor] = useState(true)\n  const [center, setCenter] = useState(true)\n  const [blockKeys, setBlockKeys] = useState(true)\n  const [isMounted, setMounted] = useState(true)\n  const [usePointer, setPointer] = useState(true)\n  const [buttons, setButtons] = useState(order.map(name => ({\n    name,\n    Button: picoButtons[name],\n    enabled: name !== 'Reset' && name !== 'Carts'\n  })))\n  const values = [\n    autoPlay,\n    legacyButtons,\n    hideCursor,\n    center,\n    blockKeys,\n    usePointer\n  ]\n  return (\n    <div>\n      <div css={page}>\n        <Global styles={font} />\n        { isMounted ?\n          <Pico8 src=\"index.js\"\n                 autoPlay={autoPlay}\n                 legacyButtons={legacyButtons}\n                 hideCursor={hideCursor}\n                 center={center}\n                 blockKeys={blockKeys}\n                 usePointer={usePointer}\n                 placeholder=\"placeholder.png\">\n            {buttons.filter(({enabled}) => enabled).map(({ name, Button }) => <Button key={name}/>)}\n          </Pico8> : null }\n        <div css={desc}>\n          <span css={[heading, link]}>\n            <h1>\n              <a href=\"https://github.com/woofers/react-pico-8\">react-pico-8</a>\n            </h1>\n            <img width=\"32px\" height=\"32px\" src=\"pico.png\" alt=\"PICO-8 Logo\" />\n          </span>\n          <form css={form}>\n            <fieldset>\n              <legend>Props</legend>\n              <Option name=\"autoPlay\" checked={autoPlay} onChange={() => setAutoPlay(!autoPlay)}>\n                Indicates if the game canvas should attempt to auto-play on page-load.\n              </Option>\n              <Option name=\"legacyButtons\" checked={legacyButtons} onChange={() => setLegacyButtons(!legacyButtons)}>\n                Used to select the type of buttons.\n              </Option>\n              <Option name=\"hideCursor\" checked={hideCursor} onChange={() => setHideCursor(!hideCursor)}>\n                Indicates if the cursor is hidden over the game canvas when the game is playing.\n              </Option>\n              <Option name=\"center\" checked={center} onChange={() => setCenter(!center)}>\n                Indicates if the game is centred outside of fullscreen mode.\n              </Option>\n              <Option name=\"blockKeys\" checked={blockKeys} onChange={() => setBlockKeys(!blockKeys)}>\n                If set keys which are used to interact with the game are blocked from scrolling when the game is running.  If un-set keys will only be blocked when the canvas is focused.\n              </Option>\n              <Option name=\"usePointer\" checked={usePointer} onChange={() => setPointer(!usePointer)}>\n                If set the pointer hand will be used on buttons.  If un-set a normal cursor will be used on all buttons which do not lead to a new page.\n              </Option>\n            </fieldset>\n            <fieldset>\n              <legend>State</legend>\n              <Option name=\"isMounted\" checked={isMounted} onChange={() => setMounted(!isMounted)}>\n                Used to test component mounting and un-mounting.\n              </Option>\n            </fieldset>\n          </form>\n          <div css={live}>\n            <div css={list}>\n              <List items={buttons} setItems={setButtons}>Buttons</List>\n            </div>\n            <div css={usage}>\n              <h2>Usage</h2>\n              <CodeBlock language=\"jsx\">{codeDemo(...values, buttons)}</CodeBlock>\n              <p>Simply add the game widget to the React application using JSX.</p>\n              <p css={link}>\n                Be sure to include the <code>.js</code> <code>src</code> of\n                the game cartridge generated from <a href=\"https://lexaloffle.com/pico-8.php\">PICO-8</a>'s web export.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}